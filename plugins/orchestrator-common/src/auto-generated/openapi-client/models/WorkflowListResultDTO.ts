// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Orchestrator plugin
 * API to interact with orchestrator plugin
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PaginationInfoDTO } from './PaginationInfoDTO';
import {
  PaginationInfoDTOFromJSON,
  PaginationInfoDTOFromJSONTyped,
  PaginationInfoDTOToJSON,
} from './PaginationInfoDTO';
import type { WorkflowDTO } from './WorkflowDTO';
import {
  WorkflowDTOFromJSON,
  WorkflowDTOFromJSONTyped,
  WorkflowDTOToJSON,
} from './WorkflowDTO';

/**
 *
 * @export
 * @interface WorkflowListResultDTO
 */
export interface WorkflowListResultDTO {
  /**
   *
   * @type {Array<WorkflowDTO>}
   * @memberof WorkflowListResultDTO
   */
  items: Array<WorkflowDTO>;
  /**
   *
   * @type {PaginationInfoDTO}
   * @memberof WorkflowListResultDTO
   */
  paginationInfo: PaginationInfoDTO;
}

/**
 * Check if a given object implements the WorkflowListResultDTO interface.
 */
export function instanceOfWorkflowListResultDTO(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'items' in value;
  isInstance = isInstance && 'paginationInfo' in value;

  return isInstance;
}

export function WorkflowListResultDTOFromJSON(
  json: any,
): WorkflowListResultDTO {
  return WorkflowListResultDTOFromJSONTyped(json, false);
}

export function WorkflowListResultDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WorkflowListResultDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    items: (json['items'] as Array<any>).map(WorkflowDTOFromJSON),
    paginationInfo: PaginationInfoDTOFromJSON(json['paginationInfo']),
  };
}

export function WorkflowListResultDTOToJSON(
  value?: WorkflowListResultDTO | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    items: (value.items as Array<any>).map(WorkflowDTOToJSON),
    paginationInfo: PaginationInfoDTOToJSON(value.paginationInfo),
  };
}
