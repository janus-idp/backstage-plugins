// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Orchestrator plugin
 * API to interact with orchestrator plugin
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WorkflowCategoryDTO } from './WorkflowCategoryDTO';
import {
  WorkflowCategoryDTOFromJSON,
  WorkflowCategoryDTOFromJSONTyped,
  WorkflowCategoryDTOToJSON,
} from './WorkflowCategoryDTO';

/**
 *
 * @export
 * @interface WorkflowOverviewDTO
 */
export interface WorkflowOverviewDTO {
  /**
   * Workflow unique identifier
   * @type {string}
   * @memberof WorkflowOverviewDTO
   */
  workflowId?: string;
  /**
   * Workflow name
   * @type {string}
   * @memberof WorkflowOverviewDTO
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof WorkflowOverviewDTO
   */
  uri?: string;
  /**
   *
   * @type {number}
   * @memberof WorkflowOverviewDTO
   */
  lastTriggeredMs?: number;
  /**
   *
   * @type {string}
   * @memberof WorkflowOverviewDTO
   */
  lastRunStatus?: string;
  /**
   *
   * @type {WorkflowCategoryDTO}
   * @memberof WorkflowOverviewDTO
   */
  category?: WorkflowCategoryDTO;
  /**
   *
   * @type {number}
   * @memberof WorkflowOverviewDTO
   */
  avgDurationMs?: number;
  /**
   *
   * @type {string}
   * @memberof WorkflowOverviewDTO
   */
  description?: string;
}

/**
 * Check if a given object implements the WorkflowOverviewDTO interface.
 */
export function instanceOfWorkflowOverviewDTO(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function WorkflowOverviewDTOFromJSON(json: any): WorkflowOverviewDTO {
  return WorkflowOverviewDTOFromJSONTyped(json, false);
}

export function WorkflowOverviewDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WorkflowOverviewDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    workflowId: !exists(json, 'workflowId') ? undefined : json['workflowId'],
    name: !exists(json, 'name') ? undefined : json['name'],
    uri: !exists(json, 'uri') ? undefined : json['uri'],
    lastTriggeredMs: !exists(json, 'lastTriggeredMs')
      ? undefined
      : json['lastTriggeredMs'],
    lastRunStatus: !exists(json, 'lastRunStatus')
      ? undefined
      : json['lastRunStatus'],
    category: !exists(json, 'category')
      ? undefined
      : WorkflowCategoryDTOFromJSON(json['category']),
    avgDurationMs: !exists(json, 'avgDurationMs')
      ? undefined
      : json['avgDurationMs'],
    description: !exists(json, 'description') ? undefined : json['description'],
  };
}

export function WorkflowOverviewDTOToJSON(
  value?: WorkflowOverviewDTO | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    workflowId: value.workflowId,
    name: value.name,
    uri: value.uri,
    lastTriggeredMs: value.lastTriggeredMs,
    lastRunStatus: value.lastRunStatus,
    category: WorkflowCategoryDTOToJSON(value.category),
    avgDurationMs: value.avgDurationMs,
    description: value.description,
  };
}
