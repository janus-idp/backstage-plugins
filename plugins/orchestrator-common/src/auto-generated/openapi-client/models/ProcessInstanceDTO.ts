// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Orchestrator plugin
 * API to interact with orchestrator plugin
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProcessInstanceStatusDTO } from './ProcessInstanceStatusDTO';
import {
  ProcessInstanceStatusDTOFromJSON,
  ProcessInstanceStatusDTOFromJSONTyped,
  ProcessInstanceStatusDTOToJSON,
} from './ProcessInstanceStatusDTO';
import type { WorkflowCategoryDTO } from './WorkflowCategoryDTO';
import {
  WorkflowCategoryDTOFromJSON,
  WorkflowCategoryDTOFromJSONTyped,
  WorkflowCategoryDTOToJSON,
} from './WorkflowCategoryDTO';
import type { WorkflowDataDTO } from './WorkflowDataDTO';
import {
  WorkflowDataDTOFromJSON,
  WorkflowDataDTOFromJSONTyped,
  WorkflowDataDTOToJSON,
} from './WorkflowDataDTO';

/**
 *
 * @export
 * @interface ProcessInstanceDTO
 */
export interface ProcessInstanceDTO {
  /**
   *
   * @type {string}
   * @memberof ProcessInstanceDTO
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof ProcessInstanceDTO
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ProcessInstanceDTO
   */
  workflow?: string;
  /**
   *
   * @type {ProcessInstanceStatusDTO}
   * @memberof ProcessInstanceDTO
   */
  status?: ProcessInstanceStatusDTO;
  /**
   *
   * @type {Date}
   * @memberof ProcessInstanceDTO
   */
  started?: Date;
  /**
   *
   * @type {string}
   * @memberof ProcessInstanceDTO
   */
  duration?: string;
  /**
   *
   * @type {WorkflowCategoryDTO}
   * @memberof ProcessInstanceDTO
   */
  category?: WorkflowCategoryDTO;
  /**
   *
   * @type {string}
   * @memberof ProcessInstanceDTO
   */
  description?: string;
  /**
   *
   * @type {WorkflowDataDTO}
   * @memberof ProcessInstanceDTO
   */
  workflowdata?: WorkflowDataDTO;
}

/**
 * Check if a given object implements the ProcessInstanceDTO interface.
 */
export function instanceOfProcessInstanceDTO(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function ProcessInstanceDTOFromJSON(json: any): ProcessInstanceDTO {
  return ProcessInstanceDTOFromJSONTyped(json, false);
}

export function ProcessInstanceDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProcessInstanceDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    name: !exists(json, 'name') ? undefined : json['name'],
    workflow: !exists(json, 'workflow') ? undefined : json['workflow'],
    status: !exists(json, 'status')
      ? undefined
      : ProcessInstanceStatusDTOFromJSON(json['status']),
    started: !exists(json, 'started') ? undefined : new Date(json['started']),
    duration: !exists(json, 'duration') ? undefined : json['duration'],
    category: !exists(json, 'category')
      ? undefined
      : WorkflowCategoryDTOFromJSON(json['category']),
    description: !exists(json, 'description') ? undefined : json['description'],
    workflowdata: !exists(json, 'workflowdata')
      ? undefined
      : WorkflowDataDTOFromJSON(json['workflowdata']),
  };
}

export function ProcessInstanceDTOToJSON(
  value?: ProcessInstanceDTO | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    workflow: value.workflow,
    status: ProcessInstanceStatusDTOToJSON(value.status),
    started:
      value.started === undefined ? undefined : value.started.toISOString(),
    duration: value.duration,
    category: WorkflowCategoryDTOToJSON(value.category),
    description: value.description,
    workflowdata: WorkflowDataDTOToJSON(value.workflowdata),
  };
}
